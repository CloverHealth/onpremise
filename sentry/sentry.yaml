apiVersion: v1
kind: Namespace
metadata:
  name: sentry
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sentry
  namespace: sentry
spec:
  replicas: 3
  template:
    metadata:
      labels:
       app: sentry-onpremise
    spec:
      containers:
      - name: memcached
        image: memcached:1.4
      - name: redis
        image: redis:3.2-alpine
      - name: smtp
        image: tianon/exim4
      - name: sentry-web
        image: gcr.io/eng-sandbox/sentry-onpremise:1.1
        args: ["run","web"]
        ports:
        - containerPort: 80
        env:
        - name: SENTRY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: sentry-secret-key
              key: sentrykey
        - name: SENTRY_REDIS_HOST
          value: localhost 
        - name: SENTRY_MEMCACHED_HOST
          value: localhost
        - name: SENTRY_EMAIL_HOST
          value: localhost
        - name: SENTRY_POSTGRES_HOST
          value: localhost 
        - name: SENTRY_DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: SENTRY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
      - name: sentry-worker
        image: gcr.io/eng-sandbox/sentry-onpremise:1.1
        args: ["run","worker"]
        env:
        - name: SENTRY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: sentry-secret-key
              key: sentrykey
        - name: SENTRY_REDIS_HOST
          value: localhost 
        - name: SENTRY_MEMCACHED_HOST
          value: localhost
        - name: SENTRY_POSTGRES_HOST
          value: localhost 
        - name: SENTRY_DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: SENTRY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
      - name: sentry-cron
        image: gcr.io/eng-sandbox/sentry-onpremise:1.1
        args: ["run", "cron"] 
        env:
        - name: SENTRY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: sentry-secret-key
              key: sentrykey
        - name: SENTRY_REDIS_HOST
          value: localhost 
        - name: SENTRY_MEMCACHED_HOST
          value: localhost
        - name: SENTRY_POSTGRES_HOST
          value: localhost
        - name: SENTRY_DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: SENTRY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy", "--dir=/cloudsql","-instances=eng-sandbox:us-east4:sentry-dev=tcp:5432","-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: cloudsql
            mountPath: /cloudsql
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      - name: cloudsql
        emptyDir:
      - name: ssl-certs
        hostPath:
          path: /etc/ssl/certs
---

apiVersion: v1
kind: Service
metadata:
  name: sentry
  namespace: sentry
spec:
  type: LoadBalancer 
  ports:
  - port: 80 
    protocol: TCP
  selector:
    app: sentry
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: sentry
  namespace: sentry
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "gce"
spec:
  tls:
  - hosts:
    - sentry.eng-sandbox.cloverhealth.engineering 
    secretName: sentry-tls
  rules:
    - host: sentry.eng-sandbox.cloverhealth.engineering
      http:
        paths:
        - path: /_health/
          backend:
            serviceName: sentry
            servicePort: 80 
